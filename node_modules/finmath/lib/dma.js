"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _common = require("./common");

// Dynamic Weighted Moving Average
// @param {Number|Array.<Number>} alpha
var _default = function _default(data, alpha, noHead) {
  var length = data.length;

  if (alpha > 1) {
    return Array(length);
  }

  if (alpha === 1) {
    return data.slice();
  }

  var isArrayWeight = (0, _common.isArray)(alpha);
  var ret = [];
  var datum; // period `i`

  var i = 0; // `s` is the value of the DWMA at any time period `i`

  var s = 0; // Handles head

  for (; i < length; i++) {
    datum = data[i];

    if ((0, _common.isNumber)(datum) && (!isArrayWeight || (0, _common.isNumber)(datum))) {
      ret[i] = noHead ? 0 : datum;
      s = datum;
      i++;
      break;
    }
  } // Dynamic weights: an array of weights
  // Ref:
  // https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average
  // with a dynamic alpha


  if (isArrayWeight) {
    for (; i < length; i++) {
      datum = data[i];
      (0, _common.isNumber)(datum) && (0, _common.isNumber)(alpha[i]) ? s = ret[i] = alpha[i] * datum + (1 - alpha[i]) * s : ret[i] = ret[i - 1];
    }

    return ret;
  }

  var o = 1 - alpha; // Fixed alpha

  for (; i < length; i++) {
    datum = data[i];
    (0, _common.isNumber)(datum) ? s = ret[i] = alpha * datum + o * s : ret[i] = ret[i - 1];
  }

  return ret;
};

exports["default"] = _default;